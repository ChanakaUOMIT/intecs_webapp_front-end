{"version":3,"sources":["components/navbar/Navbar.tsx","components/footer/Footer.tsx","layouts/DefaultLayout.jsx","components/homeCarousel/HomeCarousel.tsx","components/contactus/Contactus.tsx","components/eventList/EventList.tsx","components/latestNews/LatestNews.tsx","modules/home/Home.tsx","modules/event/Event.tsx","modules/about/About.tsx","modules/index.ts","modules/project/Project.tsx","modules/utilityPages/NotFoundPage.tsx","modules/utilityPages/CommingSoonPage.tsx","routes.ts","_helpers/history.ts","App.jsx","serviceWorker.ts","index.tsx"],"names":["Navbar","className","to","Footer","LandingLayout","ViewComponent","React","Component","HomeCarousel","Contactus","EventList","LatestNews","Home","Event","About","HomeView","EventView","AboutView","ProjectView","NotFoundView","href","target","rel","CommingSoonView","routes","path","layout","DefaultLayout","exact","component","Views","createBrowserHistory","App","history","map","route","index","key","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"6dAyBeA,MArBf,WACE,OACE,yBAAKC,UAAU,qBACb,kBAAC,IAAD,CAAMC,GAAG,KACP,sCAEF,kBAAC,IAAD,CAAMA,GAAG,WACP,wCAEF,kBAAC,IAAD,CAAMA,GAAG,aACP,yCAEF,kBAAC,IAAD,CAAMA,GAAG,UACP,yC,MCHOC,MAVf,WACE,OACE,yBAAKF,UAAU,oBACb,yDCeSG,EAlBO,SAACC,GACrB,8KAEI,OACE,oCAEE,kBAAC,EAAD,MACA,6BACE,kBAACA,EAAD,OAGF,kBAAC,EAAD,WAVR,GAAqBC,IAAMC,Y,MCWdC,MAZf,WACE,OACE,yBAAKP,UAAU,2BACb,gE,MCQSQ,MAZf,WACE,OACE,yBAAKR,UAAU,wBACb,6D,MCUSS,MAZf,WACE,OACE,yBAAKT,UAAU,wBACb,+D,MCSSU,MAZf,WACE,OACE,yBAAKV,UAAU,yBACb,8DCgBSW,EAff,uKAII,OACE,6BACE,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,WATR,GAA0BL,aCQXM,G,MAZf,uKAII,OACE,yBAAKZ,UAAU,mBACb,2DANR,GAA2BM,cCWZO,G,MAZf,uKAII,OACE,yBAAKb,UAAU,mBACb,+DANR,GAA2BM,cCIZ,G,MAAA,CACbQ,SAAUH,EACVI,UAAWH,EACXI,UAAWH,EACXI,YCPF,uKAII,OACE,yBAAKjB,UAAU,qBACb,6DANR,GAA6BM,aDQ3BY,aEVY,WACZ,OACE,6BACE,yBAAKlB,UAAU,OACb,4BAAQA,UAAU,cAChB,qCACA,mCACO,6CADP,wBAGA,uBACEA,UAAU,WACVmB,KAAK,sBACLC,OAAO,SACPC,IAAI,uBAJN,mBFERC,gBGXY,WACZ,OACE,6BACE,yBAAKtB,UAAU,OACb,4BAAQA,UAAU,cAChB,qCACA,mCACO,6CADP,wBAGA,uBACEA,UAAU,WACVmB,KAAK,sBACLC,OAAO,SACPC,IAAI,uBAJN,qBCyBKE,EA/BA,CACb,CACEC,KAAM,UACNC,OAAQC,EACRC,OAAO,EACPC,UAAWC,EAAMd,WAEnB,CACES,KAAM,SACNC,OAAQC,EACRC,OAAO,EACPC,UAAWC,EAAMb,WAEnB,CACEQ,KAAM,YACNC,OAAQC,EACRC,OAAO,EACPC,UAAWC,EAAMZ,aAEnB,CACEO,KAAM,IACNC,OAAQC,EACRC,OAAO,EACPC,UAAWC,EAAMf,UAEnB,CACEW,OAAQC,EACRE,UAAWC,EAAMX,e,cC9BNY,gBCsBAC,E,uKAjBX,OACE,kBAAC,IAAD,CAAQC,QAASA,GACf,kBAAC,IAAD,KACGT,EAAOU,KAAI,SAACC,EAAOC,GAAR,OACV,kBAAC,IAAD,CACEC,IAAKD,EACLR,MAAOO,EAAMP,MACbH,KAAMU,EAAMV,KACZI,UAAWM,EAAMT,OAAOS,EAAMN,sB,GAV1BtB,aCOE+B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDiIpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.5e9afae0.chunk.js","sourcesContent":["import React from \"react\";\r\n//import PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Navbar.scss\";\r\nfunction Navbar() {\r\n  return (\r\n    <div className=\"nav-bar-container\">\r\n      <Link to=\"/\">\r\n        <div>Home</div>\r\n      </Link>\r\n      <Link to=\"/events\">\r\n        <div>Events</div>\r\n      </Link>\r\n      <Link to=\"/projects\">\r\n        <div>Projecs</div>\r\n      </Link>\r\n      <Link to=\"/about\">\r\n        <div>About</div>\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nNavbar.propTypes = {};\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\n//import PropTypes from \"prop-types\";\r\nimport \"./Footer.scss\";\r\n\r\nfunction Footer() {\r\n  return (\r\n    <div className=\"footer-container\">\r\n      <div>Footer allocated space</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nFooter.propTypes = {};\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport Navbar from \"../components/navbar/Navbar\";\r\nimport Footer from \"../components/footer/Footer\";\r\n\r\nconst LandingLayout = (ViewComponent) => {\r\n  return class extends React.Component {\r\n    render() {\r\n      return (\r\n        <>\r\n          {/* <Import the nav bar> */}\r\n          <Navbar />\r\n          <div>\r\n            <ViewComponent />\r\n          </div>\r\n          {/* <Import the Footer /> */}\r\n          <Footer />\r\n        </>\r\n      );\r\n    }\r\n  };\r\n};\r\n\r\nexport default LandingLayout;\r\n","import React from \"react\";\r\n// import PropTypes from 'prop-types'\r\nimport \"./HomeCarousel.scss\";\r\n\r\nfunction HomeCarousel() {\r\n  return (\r\n    <div className=\"home-carousel-container\">\r\n      <div>Home Carousel Allocated space</div>\r\n    </div>\r\n  );\r\n}\r\n\r\n// HomeCarousel.propTypes = {\r\n\r\n// }\r\n\r\nexport default HomeCarousel;\r\n","import React from \"react\";\r\n// import PropTypes from 'prop-types'\r\nimport \"./Contactus.scss\";\r\nfunction Contactus() {\r\n  return (\r\n    <div className=\"contact-us-container\">\r\n      <div>Contact us allocated space</div>\r\n    </div>\r\n  );\r\n}\r\n\r\n// Contactus.propTypes = {\r\n\r\n// }\r\n\r\nexport default Contactus;\r\n","import React from \"react\";\r\n// import PropTypes from 'prop-types'\r\nimport \"./EventList.scss\";\r\n\r\nfunction EventList() {\r\n  return (\r\n    <div className=\"event-list-container\">\r\n      <div>Event list allocatated space</div>\r\n    </div>\r\n  );\r\n}\r\n\r\n// EventList.propTypes = {\r\n\r\n// }\r\n\r\nexport default EventList;\r\n","import React from \"react\";\n// import PropTypes from 'prop-types'\nimport \"./LatestNews.scss\";\n\nfunction LatestNews() {\n  return (\n    <div className=\"latest-news-container\">\n      <div>Latest News Allocated Space</div>\n    </div>\n  );\n}\n\n// LatestNews.propTypes = {\n\n// }\n\nexport default LatestNews;\n","import React, { Component } from \"react\";\r\n//import Navbar from \"../../components/navbar/Navbar\";\r\nimport HomeCarousel from \"../../components/homeCarousel/HomeCarousel\";\r\nimport Contactus from \"../../components/contactus/Contactus\";\r\nimport EventList from \"../../components/eventList/EventList\";\r\nimport LatestNews from \"../../components/latestNews/LatestNews\";\r\n// import PropTypes from \"prop-types\";\r\n\r\nexport class Home extends Component {\r\n  static propTypes = {};\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <HomeCarousel />\r\n        <LatestNews />\r\n        <EventList />\r\n        <Contactus />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React, { Component } from \"react\";\r\n// import PropTypes from 'prop-types'\r\nimport \"./Event.scss\";\r\n\r\nexport class Event extends Component {\r\n  static propTypes = {};\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"event-container\">\r\n        <div>Event Allocated Space</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Event;\r\n","import React, { Component } from \"react\";\r\n// import PropTypes from \"prop-types\";\r\nimport \"./About.scss\";\r\nexport class About extends Component {\r\n  static propTypes = {};\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"about-container\">\r\n        <div>About us Allocation space</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default About;\r\n","import Home from \"./home/Home\";\r\nimport Event from \"./event/Event\";\r\nimport About from \"./about/About\";\r\nimport Project from \"./project/Project\";\r\nimport NotFoundPage from \"./utilityPages/NotFoundPage\";\r\nimport CommingSoonPage from \"./utilityPages/CommingSoonPage\";\r\n\r\nexport default {\r\n  HomeView: Home,\r\n  EventView: Event,\r\n  AboutView: About,\r\n  ProjectView: Project,\r\n  NotFoundView: NotFoundPage,\r\n  CommingSoonView: CommingSoonPage,\r\n};\r\n","import React, { Component } from \"react\";\r\n// import PropTypes from 'prop-types'\r\nimport \"./Project.scss\";\r\n\r\nexport class Project extends Component {\r\n  static propTypes = {};\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"project-container\">\r\n        <div>Project Allocated Space</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Project;\r\n","import React from \"react\";\r\n\r\nconst About = () => {\r\n  return (\r\n    <div>\r\n      <div className=\"App\">\r\n        <header className=\"App-header\">\r\n          <h1>About</h1>\r\n          <p>\r\n            Edit <code>src/App.tsx</code> and save to reload.\r\n          </p>\r\n          <a\r\n            className=\"App-link\"\r\n            href=\"https://reactjs.org\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            Learn React\r\n          </a>\r\n        </header>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React from \"react\";\r\n\r\nconst About = () => {\r\n  return (\r\n    <div>\r\n      <div className=\"App\">\r\n        <header className=\"App-header\">\r\n          <h1>About</h1>\r\n          <p>\r\n            Edit <code>src/App.tsx</code> and save to reload.\r\n          </p>\r\n          <a\r\n            className=\"App-link\"\r\n            href=\"https://reactjs.org\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            Learn React\r\n          </a>\r\n        </header>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","// layouts\r\nimport DefaultLayout from \"./layouts/DefaultLayout\";\r\n// views\r\nimport Views from \"./modules\";\r\n\r\nconst routes = [\r\n  {\r\n    path: \"/events\",\r\n    layout: DefaultLayout,\r\n    exact: true,\r\n    component: Views.EventView,\r\n  },\r\n  {\r\n    path: \"/about\",\r\n    layout: DefaultLayout,\r\n    exact: true,\r\n    component: Views.AboutView,\r\n  },\r\n  {\r\n    path: \"/projects\",\r\n    layout: DefaultLayout,\r\n    exact: true,\r\n    component: Views.ProjectView,\r\n  },\r\n  {\r\n    path: \"/\",\r\n    layout: DefaultLayout,\r\n    exact: true,\r\n    component: Views.HomeView,\r\n  },\r\n  {\r\n    layout: DefaultLayout,\r\n    component: Views.NotFoundView,\r\n  },\r\n];\r\n\r\nexport default routes;\r\n","import { createBrowserHistory } from \"history\";\r\n\r\nexport default createBrowserHistory();\r\n","import React, { Component } from \"react\";\r\nimport routes from \"./routes\";\r\nimport { Router, Route, Switch } from \"react-router-dom\";\r\nimport history from \"./_helpers/history\";\r\n// import \"./App.scss\";\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Router history={history}>\r\n        <Switch>\r\n          {routes.map((route, index) => (\r\n            <Route\r\n              key={index}\r\n              exact={route.exact}\r\n              path={route.path}\r\n              component={route.layout(route.component)}\r\n            />\r\n          ))}\r\n        </Switch>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}